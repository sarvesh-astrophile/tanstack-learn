# Multi-stage build for TanStack Learn Server
FROM oven/bun:1.2 AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json bun.lock ./
COPY apps/server/package.json ./apps/server/

# Install dependencies (allow lockfile updates for production builds)
RUN bun install

# Copy source code
COPY apps/server ./apps/server

# Build the application
WORKDIR /app/apps/server
RUN bun run build

# Development stage (includes dev dependencies for database operations)
FROM oven/bun:1.2 AS development

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -s /bin/false -m -d /app appuser

# Set working directory
WORKDIR /app

# Copy built application and source files from builder stage
COPY --from=builder /app/apps/server/dist ./dist
COPY --from=builder /app/apps/server/src ./src
COPY --from=builder /app/apps/server/drizzle.config.ts ./
COPY --from=builder /app/apps/server/package.json ./
COPY --from=builder /app/bun.lock ./

# Copy root package files for turbo commands
COPY --from=builder /app/package.json ./
COPY --from=builder /app/turbo.json ./

# Install all dependencies including dev dependencies for database operations
RUN bun install

# Create data directory for database
RUN mkdir -p /app/data && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set environment variables
ENV NODE_ENV=production
ENV DATABASE_URL=file:/app/data/local.db
ENV SERVER_PORT=${SERVER_PORT:-3000}

# Expose port
EXPOSE ${SERVER_PORT:-3000}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:${SERVER_PORT:-3000}/ || exit 1

# Default command for development stage - allow overriding with docker run
CMD ["sh", "-c", "bun run dist/index.js --port ${SERVER_PORT:-3000}"]

# Production stage
FROM oven/bun:1.2-slim AS production

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -s /bin/false -m -d /app appuser

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /app/apps/server/dist ./dist
COPY --from=builder /app/apps/server/src/db ./src/db
COPY --from=builder /app/apps/server/drizzle.config.ts ./

# Create data directory for database
RUN mkdir -p /app/data && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set environment variables
ENV NODE_ENV=production
ENV DATABASE_URL=file:/app/data/local.db
ENV SERVER_PORT=${SERVER_PORT:-3000}

# Expose port
EXPOSE ${SERVER_PORT:-3000}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:${SERVER_PORT:-3000}/ || exit 1

# Start the server
CMD ["sh", "-c", "bun run dist/index.js --port ${SERVER_PORT:-3000}"]